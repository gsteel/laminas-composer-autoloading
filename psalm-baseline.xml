<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.6.4@97fe86c4e158b5a57c5150aa5055c38b5a809aab">
  <file src="src/Command.php">
    <InvalidStringClass occurrences="1">
      <code>new $command($this-&gt;projectDir, $this-&gt;modulesPath, $this-&gt;composer)</code>
    </InvalidStringClass>
    <MixedArgument occurrences="9">
      <code>$args[$i + 1]</code>
      <code>$args[$i]</code>
      <code>$dest</code>
      <code>$movedModuleClass</code>
      <code>$movedModuleClass</code>
      <code>$this-&gt;command</code>
      <code>$this-&gt;console</code>
      <code>$this-&gt;module</code>
      <code>array_shift($args)</code>
    </MixedArgument>
    <MixedAssignment occurrences="7">
      <code>$arg</code>
      <code>$arg</code>
      <code>$dest</code>
      <code>$movedModuleClass</code>
      <code>$this-&gt;composer</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;type</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>writeErrorMessage</code>
      <code>writeErrorMessage</code>
      <code>writeErrorMessage</code>
      <code>writeLine</code>
      <code>writeLine</code>
      <code>writeLine</code>
      <code>writeLine</code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor occurrences="3">
      <code>$module</code>
      <code>$modulePath</code>
      <code>$type</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $command</code>
    </RedundantCastGivenDocblockType>
    <UndefinedMethod occurrences="1">
      <code>getMovedModuleClass</code>
    </UndefinedMethod>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;command</code>
      <code>$this-&gt;console</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="7">
      <code>$this-&gt;command</code>
      <code>$this-&gt;console</code>
      <code>$this-&gt;console</code>
      <code>$this-&gt;console</code>
      <code>$this-&gt;console</code>
      <code>$this-&gt;console</code>
      <code>$this-&gt;console</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="src/Command/AbstractCommand.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;getComposerJson()</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$composerPackage</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>string</code>
    </InvalidReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;modulesPath</code>
    </MixedArgument>
    <PropertyNotSetInConstructor occurrences="5">
      <code>$composerJsonFile</code>
      <code>$composerPackage</code>
      <code>$moduleName</code>
      <code>$modulePath</code>
      <code>$type</code>
    </PropertyNotSetInConstructor>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;modulesPath</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="1">
      <code>$this-&gt;modulesPath</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="src/Command/Disable.php">
    <InvalidReturnStatement occurrences="1">
      <code>$composerPackage</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>execute</code>
    </InvalidReturnType>
    <MixedArrayAccess occurrences="2">
      <code>$composerPackage['autoload'][$type]</code>
      <code>$composerPackage['autoload'][$type]</code>
    </MixedArrayAccess>
    <PropertyNotSetInConstructor occurrences="5">
      <code>Disable</code>
      <code>Disable</code>
      <code>Disable</code>
      <code>Disable</code>
      <code>Disable</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Command/Enable.php">
    <InvalidReturnStatement occurrences="1">
      <code>$composerPackage</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>execute</code>
    </InvalidReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;modulesPath</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="1">
      <code>$composerPackage['autoload'][$type]</code>
    </MixedArrayAssignment>
    <PropertyNotSetInConstructor occurrences="5">
      <code>Enable</code>
      <code>Enable</code>
      <code>Enable</code>
      <code>Enable</code>
      <code>Enable</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $value</code>
    </RedundantCastGivenDocblockType>
    <UndefinedThisPropertyFetch occurrences="1">
      <code>$this-&gt;modulesPath</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Command/AbstractCommandTest.php">
    <DeprecatedMethod occurrences="1">
      <code>setMethods</code>
    </DeprecatedMethod>
    <InvalidPropertyAssignmentValue occurrences="1"/>
    <MissingReturnType occurrences="7">
      <code>testComposerJsonContentIsNotChangedAndDumpAutoloadIsNotCalledWhenExecuteMethodReturnsFalse</code>
      <code>testComposerJsonContentIsUpdatedAndDumpAutoloadIsCalledWhenExecuteMethodReturnsNewContent</code>
      <code>testThrowsExceptionWhenCannotDetermineModuleType</code>
      <code>testThrowsExceptionWhenComposerJsonDoesNotExist</code>
      <code>testThrowsExceptionWhenComposerJsonHasInvalidContent</code>
      <code>testThrowsExceptionWhenComposerJsonHasNoContent</code>
      <code>testThrowsExceptionWhenComposerJsonIsNotWritable</code>
    </MissingReturnType>
    <MixedMethodCall occurrences="1">
      <code>at</code>
    </MixedMethodCall>
  </file>
  <file src="test/Command/DisableTest.php">
    <MissingReturnType occurrences="3">
      <code>testAddsCorrectEntryToComposerJsonAndComposerDumpAutoloadCalledAutodiscoveryModuleType</code>
      <code>testRemovesEntryFromComposerJsonAndComposerDumpAutoloadCalled</code>
      <code>testReturnsFalseWithoutChangesBecauseComposerAutoloadingAlreadyDisabled</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$json['autoload'][$type]</code>
      <code>$json['autoload'][$type]</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="4">
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$json</code>
      <code>$json</code>
    </MixedAssignment>
  </file>
  <file src="test/Command/EnableTest.php">
    <InvalidDocblock occurrences="1">
      <code>null|array&lt;string-string&gt;</code>
    </InvalidDocblock>
    <MissingReturnType occurrences="6">
      <code>testAddsCorrectEntryToComposerJsonAndComposerDumpAutoloadCalledAutodiscoveryModuleType</code>
      <code>testAddsEntryToComposerJsonAndComposerDumpAutoloadCalled</code>
      <code>testModuleClassFileDoesNotContainModuleClassSoItIsNotMoved</code>
      <code>testModuleClassFileExistsInBothLocationSoItIsNotMoved</code>
      <code>testMovesModuleClassFile</code>
      <code>testReturnsFalseWithoutChangesBecauseComposerAutoloadingAlreadyEnabled</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$json['autoload'][$type]</code>
      <code>$json['autoload'][$type]</code>
      <code>$json['autoload'][$type]</code>
      <code>$newModuleFile-&gt;url()</code>
      <code>reset($expected)</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>key($expected)</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="7">
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
      <code>$json['autoload']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="4">
      <code>$json</code>
      <code>$json</code>
      <code>$json</code>
      <code>$newModuleFile</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>at</code>
      <code>getContent</code>
      <code>url</code>
    </MixedMethodCall>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getChild</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/CommandTest.php">
    <MissingClosureParamType occurrences="6">
      <code>$command</code>
      <code>$command</code>
      <code>$output</code>
      <code>$output</code>
      <code>$retValue</code>
      <code>$retValue</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="17">
      <code>testArgumentIsSetAndHasExpectedValue</code>
      <code>testCommandErrorIfComposerIsNotExecutable</code>
      <code>testCommandErrorIfInvalidNumberOfArgumentsProvided</code>
      <code>testCommandErrorIfInvalidTypeProvided</code>
      <code>testCommandErrorIfModuleDoesNotExist</code>
      <code>testCommandErrorIfModulesDirectoryDoesNotExist</code>
      <code>testCommandErrorIfNoModuleNameProvided</code>
      <code>testCommandErrorIfUnknownArgumentProvided</code>
      <code>testDefaultArgumentsValues</code>
      <code>testErrorMessageWhenActionProcessThrowsException</code>
      <code>testHelpRequestsEmitHelpToStdout</code>
      <code>testMessageOnDisableWhenModuleIsAlreadyDisabled</code>
      <code>testMessageOnEnableWhenModuleIsAlreadyEnabled</code>
      <code>testSuccessMessageOnDisable</code>
      <code>testSuccessMessageOnEnable</code>
      <code>testSuccessMessageOnEnableAndModuleClassFileMoved</code>
      <code>testUnknownCommandEmitsHelpToStderrWithErrorMessage</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>MyTestingCommand::class</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="1">
      <code>$commands[$cmd]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$commands</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="16">
      <code>andReturn</code>
      <code>andReturn</code>
      <code>andReturn</code>
      <code>andReturn</code>
      <code>andReturn</code>
      <code>andReturn</code>
      <code>andReturnNull</code>
      <code>andThrow</code>
      <code>once</code>
      <code>once</code>
      <code>once</code>
      <code>once</code>
      <code>once</code>
      <code>once</code>
      <code>once</code>
      <code>once</code>
    </MixedMethodCall>
    <PossiblyUndefinedMethod occurrences="8">
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>withNoArgs</code>
      <code>withNoArgs</code>
    </PossiblyUndefinedMethod>
    <UndefinedClass occurrences="2">
      <code>MyTestingCommand</code>
      <code>MyTestingCommand</code>
    </UndefinedClass>
    <UndefinedMagicMethod occurrences="8">
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>withNoArgs</code>
      <code>withNoArgs</code>
    </UndefinedMagicMethod>
  </file>
  <file src="test/HelpTest.php">
    <MissingReturnType occurrences="2">
      <code>testTruncatesCommandToBasenameIfItIsARealpath</code>
      <code>testWritesHelpMessageToConsoleUsingCommandProvidedAtInstantiationAndResourceAtInvocation</code>
    </MissingReturnType>
  </file>
  <file src="test/ProjectSetupTrait.php">
    <MissingClosureParamType occurrences="1">
      <code>$command</code>
    </MissingClosureParamType>
    <MixedInferredReturnType occurrences="2">
      <code>vfsStreamFile</code>
      <code>vfsStreamFile</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>at</code>
      <code>at</code>
    </MixedMethodCall>
  </file>
</files>
